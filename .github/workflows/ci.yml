name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['8.0.x']

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Run Init Command
      run: dotnet run init --name "Test API Project" --base-url "https://jsonplaceholder.typicode.com" --force
      
    - name: Run GET Tests
      run: dotnet run run apis/sample-api.json

    - name: Run POST Tests
      run: dotnet run run apis/sample-post.json
      
    - name: Run All Tests Command
      run: dotnet run tests
      
    - name: List environments
      run: dotnet run list-env
      
    - name: Test Mock Server (Linux/macOS only)
      if: runner.os != 'Windows'
      run: |
        # Start mock server in background
        dotnet run mock-server --port 5000 &
        # Give server time to start
        sleep 2
        # Test default response for products search
        curl -s "http://localhost:5000/products/search" | grep "Programming Guide" || exit 1
        # Kill background process
        kill %1
      
    - name: Test Mock Server (Windows only)
      if: runner.os == 'Windows'
      run: |
        # Start mock server in background
        start /b dotnet run mock-server --port 5000
        # Give server time to start
        timeout /t 2
        # Test default response - check if server is running
        curl -s "http://localhost:5000/products/search"