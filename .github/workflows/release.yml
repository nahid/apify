name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.0.0'

# Add explicit permissions needed for creating releases
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-single-file:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rid: linux-x64
            platform: Linux
            artifact_extension: ''
            
          - rid: win-x64
            platform: Windows
            artifact_extension: '.exe'
            
          - rid: osx-x64
            platform: macOS
            artifact_extension: ''
            
          - rid: osx-arm64
            platform: macOS-arm64
            artifact_extension: ''
    outputs:
      version: ${{ steps.set_version_from_build.outputs.VERSION }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Single File
      run: dotnet publish Apify.csproj -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true
    
    - name: Set version from build job
      id: set_version_from_build
      run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      shell: bash
      
    - name: Prepare Release Asset
      run: |
        ASSET_NAME="apify-${{ steps.set_version_from_build.outputs.VERSION }}-${{ matrix.platform }}"
        mkdir -p release-assets/apify
        mv ./bin/Release/net8.0/${{ matrix.rid }}/publish/apify${{ matrix.artifact_extension }} ./release-assets/apify/
        cd release-assets
        tar -a -c -f "../${ASSET_NAME}.zip" apify
        cd ..
        mv "${ASSET_NAME}.zip" release-assets/
      shell: bash

    - name: Upload Release Asset
      uses: actions/upload-artifact@v4
      with:
        name: apify-${{ matrix.platform }}
        path: release-assets/apify-${{ steps.set_version_from_build.outputs.VERSION }}-${{ matrix.platform }}.zip
        
  create-release:
    needs: build-single-file
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set version from build job
      id: set_version_from_build
      run: echo "VERSION=${{ needs.build-single-file.outputs.version }}" >> $GITHUB_OUTPUT
      shell: bash
    
    # Download individual artifacts separately to avoid directories
    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: apify-Linux
        path: ./release-artifacts
        
    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: apify-Windows
        path: ./release-artifacts
        
    - name: Download macOS Artifact
      uses: actions/download-artifact@v4
      with:
        name: apify-macOS
        path: ./release-artifacts
        
    - name: Download macOS ARM64 Artifact
      uses: actions/download-artifact@v4
      with:
        name: apify-macOS-arm64
        path: ./release-artifacts
    
    - name: List prepared artifacts
      run: ls -la ./release-artifacts/
      shell: bash
    
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.set_version_from_build.outputs.VERSION }}
        name: Release v${{ steps.set_version_from_build.outputs.VERSION }}
        draft: false
        prerelease: false
        artifacts: "./release-artifacts/*"
        artifactContentType: application/octet-stream
        allowUpdates: true
        removeArtifacts: false
        token: ${{ github.token }}
